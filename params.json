{"name":"Knife-solo","body":"# knife-solo\r\n\r\n## DESCRIPTION:\r\n\r\nKnife-solo is a gem plugin for Chef's knife utility. It currently adds 3 subcommands to knife: kitchen, prepare and cook\r\n\r\nThe `kitchen` command is used to create a new directory structure that fits with chef's standard structure and can be used to build and store recipes.\r\n\r\nThe `prepare` command installs Ruby, RubyGems and \\Chef on a given host. It's structured to auto-detect the target OS and change the installation process accordingly.\r\n\r\nThe `cook` command uploads the current kitchen (chef repo) to the target host and runs chef-solo on that host.\r\n\r\nPreliminary Windows support for `cook` is available (see below).\r\n\r\n## USAGE:\r\n\r\nInstallation is a normal gem installation.\r\n\r\n    gem install knife-solo\r\n\r\n### Kitchen command\r\n\r\nThe kitchen command simply takes a name of the directory to store the kitchen structure.\r\n\r\n    knife kitchen mychefrepo\r\n\r\nCurrently the directory structure looks like this, but could change as development continues.\r\n\r\n    mykitchen/\r\n    ├── cookbooks\r\n    ├── data_bags\r\n    ├── nodes\r\n    ├── roles\r\n    ├── site-cookbooks\r\n    └── solo.rb\r\n\r\n### Prepare command\r\n\r\nThe prepare command takes an ssh-style host argument as follows:\r\n\r\n    knife prepare ubuntu@10.0.0.201\r\n\r\nIt will look up SSH information from `~/.ssh/config` or in the file specified by `-F`. You can also pass port information (`-p`), identity information (`-i`), or a password (`-P`). It will use sudo to run some of these commands and will prompt you for the password if it's not supplied on the command line.\r\n\r\n### Cook command\r\n\r\nThe cook command also takes an ssh-style host argument:\r\n\r\n    knife cook ubuntu@10.0.0.201\r\n\r\nThe cook command uploads the current kitchen to the server and runs chef-solo on that server. If you only specify one argument it will look for a node config in `nodes/<hostname>.json`. Or if you want to specify a node config you can pass the path to the file as the second argument.\r\n\r\nThis uploads all of your cookbooks in addition to a patch that allows you to use data_bags in a read-only fashion from the `data_bags` folder.\r\n\r\n### Windows support\r\n\r\nThe cook command will work on Windows node if you meet the following howto:\r\n\r\n#### Kitchen then tweak\r\n\r\n- run `knife kitchen` then edit solo.rb to use Windows path-naming (see https://gist.github.com/1773854)\r\n\r\n#### Prepare the node manually\r\n\r\n- install a SSH server (eg: WinSSHd)\r\n- install rsync on the node (see https://github.com/thbar/rsync-windows)\r\n- add rsync to the user PATH\r\n- install http://www.opscode.com/chef/install.msi\r\n- add nodes/hostname.json and put `{ \"run_list\": [] }` in it\r\n\r\n#### Cook\r\n\r\n- cook should work as expected automatically, if you use cygwin rsync\r\n\r\n## DEVELOPMENT\r\n\r\nGet set up by running `./script/newb` this will do some of the steps and guide you through the rest. If it doesn't run for you, feel free to [file an issue](https://github.com/matschaffer/knife-solo/issues).\r\n\r\nWhen running integration tests you can specify VERBOSE=true as an environment variable to enable verbose output. All integration testing output is sent to the log directory into a file that matches matches the test case name.\r\n\r\nYou can also specify SKIP_DESTROY=true to leave the EC2 instances running after test completion. Note that this is for debugging purposes and re-running the test will not re-use old instances. Please clean them up manually if you cancel the test or specify SKIP_DESTROY.\r\n\r\nTo make an integration test, create a file in the `test/integration` directory and a test class that inherits from `IntegrationTest` and includes `IntegrationTest::BasicPrepareAndCook` or other test cases. You can override methods as necessary, but generally you only need to override `user` and `image_id` to specify the user name and AMI ID.\r\n\r\nIf you're interested in contributing, contact me via GitHub or have a look at the [GitHub issues page](https://github.com/matschaffer/knife-solo/issues).\r\n","tagline":"Concepts from spatula and littlechef implemented as a knife plugin","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}